geom_point(size = 2.5, shape = 1, data = nonzero_qi1, colour = "black") + # overlay larger black hollow circles around nonzero qi_1 values
geom_smooth(method=lm, se = FALSE, linewidth = 0.5) +
# Add linear regression line that includes 95% confidence region by default
scale_y_continuous(limits = c(-0.25,1.25), expand = c(0,0)) +
# use scale_y_continuous to set the range of the y-axis, expand to add some padding to ensure no values are cut-off
theme_classic() +
facet_wrap(~age_band) +
scale_color_manual(values = c("Female" = colour_f, "Male" = colour_m)) + # set colours for diagnostic group
xlab("ENIGMA Derived Brain Age Gap") +
ylab("BrainChart Centile Score") +
labs(colour = "Sex Assigned at Birth")
plot_sex
ggsave("centile_BAG_qi1_sex.png", plot = plot_sex, height = 5, width = 7, dpi = 800)
ggplot(data = brainage_final, aes(x = age_band, y = centile, colour = dx))+
geom_boxplot(position=position_dodge(width=0.9)) +
geom_point(position=position_jitterdodge(dodge.width=0.9)) +
geom_point(data = nonzero_qi1, size = 2.5, shape = 1, colour = "red", position=position_jitterdodge(dodge.width=0.9)) +
# add geom_point() to overlay the points
theme_classic() +
facet_wrap(~sex) +
scale_color_manual(values = c("PSS" = colour_pss, "Non-PSS" = colour_non_pss)) + # set colours for diagnostic group
xlab("ENIGMA Derived Brain Age Gap") +
ylab("BrainChart Centile Score")
ggplot(data = brainage_final, aes(x = age_band, y = centile, colour = dx))+
geom_boxplot(position=position_dodge(width=0.9)) +
geom_point(position=position_jitterdodge(dodge.width=0.9)) +
geom_point(data = nonzero_qi1, size = 2.5, shape = 1, colour = "red") +
# add geom_point() to overlay the points
theme_classic() +
facet_wrap(~sex) +
scale_color_manual(values = c("PSS" = colour_pss, "Non-PSS" = colour_non_pss)) + # set colours for diagnostic group
xlab("ENIGMA Derived Brain Age Gap") +
ylab("BrainChart Centile Score")
ggplot(data = brainage_final, aes(x = age_band, y = centile, colour = dx))+
geom_boxplot(position=position_dodge(width=0.9)) +
# geom_point(position=position_jitterdodge(dodge.width=0.9)) +
geom_point(data = nonzero_qi1, size = 2.5, shape = 1, colour = "red") +
# add geom_point() to overlay the points
theme_classic() +
facet_wrap(~sex) +
scale_color_manual(values = c("PSS" = colour_pss, "Non-PSS" = colour_non_pss)) + # set colours for diagnostic group
xlab("ENIGMA Derived Brain Age Gap") +
ylab("BrainChart Centile Score")
ggplot(data = brainage_final, aes(x = age_band, y = centile, colour = dx))+
geom_boxplot(position=position_dodge(width=0.9)) +
geom_point(position=position_jitterdodge(dodge.width=0.9)) +
geom_point(data = nonzero_qi1, aes(x = age_band, y = centile), size = 2.5, shape = 1, colour = "red", position=position_jitterdodge(dodge.width=0.9)) +
# add geom_point() to overlay the points
theme_classic() +
facet_wrap(~sex) +
scale_color_manual(values = c("PSS" = colour_pss, "Non-PSS" = colour_non_pss)) + # set colours for diagnostic group
xlab("ENIGMA Derived Brain Age Gap") +
ylab("BrainChart Centile Score")
ggplot(data = brainage_final, aes(x = age_band, y = centile, colour = dx))+
geom_boxplot(position=position_dodge(width=0.9)) +
geom_point(position=position_jitterdodge(dodge.width=0.9)) +
geom_point(data = nonzero_qi1, size = 2.5, shape = 1, colour = "red") +
# add geom_point() to overlay the points
theme_classic() +
facet_wrap(~sex) +
scale_color_manual(values = c("PSS" = colour_pss, "Non-PSS" = colour_non_pss)) + # set colours for diagnostic group
xlab("ENIGMA Derived Brain Age Gap") +
ylab("BrainChart Centile Score")
ggplot(data = brainage_final, aes(x = age_band, y = centile, colour = dx))+
geom_boxplot(position=position_dodge(width=0.9)) +
geom_point(position=position_jitterdodge(dodge.width=0.9)) +
geom_point(data = nonzero_qi1, aes(shape = dx), position = position_dodge(width = 0.9), size = 2.5, colour = "red") +
# add geom_point() to overlay the points
theme_classic() +
facet_wrap(~sex) +
scale_color_manual(values = c("PSS" = colour_pss, "Non-PSS" = colour_non_pss)) + # set colours for diagnostic group
xlab("ENIGMA Derived Brain Age Gap") +
ylab("BrainChart Centile Score")
ggplot(data = brainage_final, aes(x = age_band, y = centile, colour = dx))+
geom_boxplot(position=position_dodge(width=0.9)) +
geom_point(position=position_jitterdodge(dodge.width=0.9)) +
geom_point(data = nonzero_qi1, aes(shape = dx), position = position_dodge(width = 0.9), , colour = "red") +
# add geom_point() to overlay the points
theme_classic() +
facet_wrap(~sex) +
scale_color_manual(values = c("PSS" = colour_pss, "Non-PSS" = colour_non_pss)) + # set colours for diagnostic group
xlab("ENIGMA Derived Brain Age Gap") +
ylab("BrainChart Centile Score")
ggplot(data = brainage_final, aes(x = age_band, y = centile, colour = dx))+
geom_boxplot(position=position_dodge(width=0.9)) +
geom_point(position=position_jitterdodge(dodge.width=0.9)) +
geom_point(data = nonzero_qi1, aes(shape = dx), position = position_dodge(width = 0.9), colour = "red") +
# add geom_point() to overlay the points
theme_classic() +
facet_wrap(~sex) +
scale_color_manual(values = c("PSS" = colour_pss, "Non-PSS" = colour_non_pss)) + # set colours for diagnostic group
xlab("ENIGMA Derived Brain Age Gap") +
ylab("BrainChart Centile Score")
knitr::opts_chunk$set(echo = TRUE)
brainage_final %>%
ggplot(aes(x = age_band, y = centile, colour = dx)) +
geom_boxplot(position=position_dodge(width=0.9)) +
geom_point(position=position_jitterdodge(dodge.width=0.9)) +
# add geom_point() to overlay the points
theme_classic() +
facet_wrap(~sex) +
scale_color_manual(values = c("PSS" = colour_pss, "Non-PSS" = colour_non_pss)) + # set colours for diagnostic group
xlab("ENIGMA Derived Brain Age Gap") +
ylab("BrainChart Centile Score")
ggplot(data = brainage_final, aes(x = age_band, y = centile, colour = dx))+
geom_boxplot(position=position_dodge(width=0.9)) +
geom_point(position=position_jitterdodge(dodge.width=0.9)) +
geom_point(data = nonzero_qi1, aes(shape = dx), colour = "red") +
# add geom_point() to overlay the points
theme_classic() +
facet_wrap(~sex) +
scale_color_manual(values = c("PSS" = colour_pss, "Non-PSS" = colour_non_pss)) + # set colours for diagnostic group
xlab("ENIGMA Derived Brain Age Gap") +
ylab("BrainChart Centile Score")
ggplot(data = brainage_final, aes(x = age_band, y = centile, colour = dx))+
geom_boxplot(position=position_dodge(width=0.9)) +
geom_point() +
geom_point(data = nonzero_qi1, aes(shape = dx), colour = "red") +
# add geom_point() to overlay the points
theme_classic() +
facet_wrap(~sex) +
scale_color_manual(values = c("PSS" = colour_pss, "Non-PSS" = colour_non_pss)) + # set colours for diagnostic group
xlab("ENIGMA Derived Brain Age Gap") +
ylab("BrainChart Centile Score")
ggplot(data = brainage_final, aes(x = age_band, y = centile, colour = dx))+
geom_boxplot(position=position_dodge(width=0.9)) +
geom_point(position=position_jitterdodge(dodge.width=0.9)) +
geom_point(data = nonzero_qi1, aes(shape = dx), position = position_dodge(width = 0.9), colour = "red") +
# add geom_point() to overlay the points
theme_classic() +
facet_wrap(~sex) +
scale_color_manual(values = c("PSS" = colour_pss, "Non-PSS" = colour_non_pss)) + # set colours for diagnostic group
xlab("ENIGMA Derived Brain Age Gap") +
ylab("BrainChart Centile Score")
ggplot(data = brainage_final, aes(x = age_band, y = centile, colour = dx))+
geom_boxplot(position=position_dodge(width=0.9)) +
geom_point(position=position_jitterdodge(dodge.width=0.9)) +
geom_point(data = nonzero_qi1, aes(shape = dx), position = position_nudge(x = 0.15), colour = "red") +
# add geom_point() to overlay the points
theme_classic() +
facet_wrap(~sex) +
scale_color_manual(values = c("PSS" = colour_pss, "Non-PSS" = colour_non_pss)) + # set colours for diagnostic group
xlab("ENIGMA Derived Brain Age Gap") +
ylab("BrainChart Centile Score")
ggplot(data = brainage_final, aes(x = age_band, y = centile, colour = dx))+
geom_boxplot(position=position_dodge(width=0.9)) +
geom_point(position=position_jitterdodge(dodge.width=0.9)) +
geom_point(data = nonzero_qi1, aes(shape = dx), position = position_nudge(x = 0.9), colour = "red") +
# add geom_point() to overlay the points
theme_classic() +
facet_wrap(~sex) +
scale_color_manual(values = c("PSS" = colour_pss, "Non-PSS" = colour_non_pss)) + # set colours for diagnostic group
xlab("ENIGMA Derived Brain Age Gap") +
ylab("BrainChart Centile Score")
ggplot(data = brainage_final, aes(x = age_band, y = centile, colour = dx))+
geom_boxplot(position=position_dodge(width=0.9)) +
geom_point(position=position_jitterdodge(dodge.width=0.9)) +
geom_point(data = nonzero_qi1, aes(shape = dx), position = position_dodge(dodge.width = 0.9), colour = "red") +
# add geom_point() to overlay the points
theme_classic() +
facet_wrap(~sex) +
scale_color_manual(values = c("PSS" = colour_pss, "Non-PSS" = colour_non_pss)) + # set colours for diagnostic group
xlab("ENIGMA Derived Brain Age Gap") +
ylab("BrainChart Centile Score")
ggplot(data = brainage_final, aes(x = age_band, y = centile, colour = dx))+
geom_boxplot(position=position_dodge(width=0.9)) +
geom_point(position=position_jitterdodge(dodge.width=0.9)) +
geom_point(data = nonzero_qi1, aes(shape = dx), position = position_jitterdodge(dodge.width = 0.9), colour = "red") +
# add geom_point() to overlay the points
theme_classic() +
facet_wrap(~sex) +
scale_color_manual(values = c("PSS" = colour_pss, "Non-PSS" = colour_non_pss)) + # set colours for diagnostic group
xlab("ENIGMA Derived Brain Age Gap") +
ylab("BrainChart Centile Score")
ggplot(data = brainage_final, aes(x = age_band, y = centile, colour = dx))+
geom_boxplot(position=position_dodge(width=0.9)) +
geom_point(position=position_jitterdodge(dodge.width=0.9)) +
geom_point(data = nonzero_qi1, position = position_jitterdodge(dodge.width = 0.9), colour = "red") +
# add geom_point() to overlay the points
theme_classic() +
facet_wrap(~sex) +
scale_color_manual(values = c("PSS" = colour_pss, "Non-PSS" = colour_non_pss)) + # set colours for diagnostic group
xlab("ENIGMA Derived Brain Age Gap") +
ylab("BrainChart Centile Score")
ggplot(data = brainage_final, aes(x = age_band, y = centile, colour = dx, shape = dx))+
geom_boxplot(position=position_dodge(width=0.9)) +
geom_point(position=position_jitterdodge(dodge.width=0.9)) +
geom_point(data = nonzero_qi1, aes(shape = dx), position = position_jitterdodge(dodge.width = 0.9), colour = "red") +
# add geom_point() to overlay the points
theme_classic() +
facet_wrap(~sex) +
scale_color_manual(values = c("PSS" = colour_pss, "Non-PSS" = colour_non_pss)) + # set colours for diagnostic group
xlab("ENIGMA Derived Brain Age Gap") +
ylab("BrainChart Centile Score")
ggplot(data = brainage_final, aes(x = age_band, y = centile, colour = dx, shape = dx))+
geom_boxplot(position=position_dodge(width=0.9)) +
geom_point(position=position_jitterdodge(dodge.width=0.9)) +
geom_point(data = nonzero_qi1, colour = "red") +
# add geom_point() to overlay the points
theme_classic() +
facet_wrap(~sex) +
scale_color_manual(values = c("PSS" = colour_pss, "Non-PSS" = colour_non_pss)) + # set colours for diagnostic group
xlab("ENIGMA Derived Brain Age Gap") +
ylab("BrainChart Centile Score")
lm_centile <- lm(centile ~ sex * dx * age_band, data = extreme_qi1)
aov(lm_centile) # perform ANOVA on the linear model
plot(aov(lm_centile)) # verify assumptions (normal distribution, homoscedasticity, additivity)
lm_centile <- lm(centile ~ sex * dx * age_band, data = mild_qi1)
aov(lm_centile) # perform ANOVA on the linear model
plot(aov(lm_centile)) # verify assumptions (normal distribution, homoscedasticity, additivity)
summary(aov(lm_centile)) # identify strength of interactions
lm_centile_age <- lm(centile ~ sex * dx * Age, data = brainage_final)
aov(lm_centile_age)
summary(aov(lm_centile_age))
lm_centile <- lm(centile ~ sex * dx * age_band, data = brainage_final)
aov(lm_centile) # perform ANOVA on the linear model
plot(aov(lm_centile)) # verify assumptions (normal distribution, homoscedasticity, additivity)
summary(aov(lm_centile)) # identify strength of interactions
# age
lm_centile_age <- lm(centile ~ sex * dx * Age, data = brainage_final)
aov(lm_centile_age)
summary(aov(lm_centile_age))
lm_centile_age <- lm(centile ~ sex * dx * Age, data = brainage_final)
aov(lm_centile_age)
summary(aov(lm_centile_age))
lm_centile_age <- lm(centile ~ sex * dx * Age, data = mild_qi1)
aov(lm_centile_age)
summary(aov(lm_centile_age))
TukeyHSD(aov(lm_centile_age))
aov_centile_age <- aov(centile ~ sex * dx * Age, data = mild_qi1)
TukeyHSD(aov_centile_age)
aov_centile_age <- aov(centile ~ as.factor(sex) * as.factor(dx) * Age, data = mild_qi1)
TukeyHSD(aov_centile_age)
lm_centile_age <- lm(centile ~ sex * dx * Age, data = brainage_final)
aov(lm_centile_age)
summary(aov(lm_centile_age))
cor.test(mild_qi1$centile, mild_qi1$BAG, method = "pearson")
cor.test(brainage_final$centile, brainage_final$BAG, method = "pearson")
cor.test(zero_qi1$centile, zero_qi1$BAG, method = "pearson")
lm_BAG <- lm(BAG ~ sex * dx * age_band, data = brainage_final)
aov(lm_BAG)
summary(aov(lm_BAG))
lm_BAG <- lm(BAG ~ sex * dx * age_band, data = mild_qi1)
# figure out how to do the analysis by category - e.g., linear model for just the youngest age group or lm for the participants with 5+ total disorders
aov(lm_BAG)
summary(aov(lm_BAG))
knitr::opts_chunk$set(echo = TRUE)
install.packages("ggcorrplot")
library(tidyverse)
library(ggcorrplot)
library(dplyr)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggcorrplot)
library(dplyr)
brainage_final <- read_csv("/KIMEL/tigrlab/scratch/csun/brainage_proj/data/processed/brainage_final.csv")
View(brainage_final)
brainage_num <- brainage_final %>% filter(is.numeric(brainage_final))
brainage_num
brainage_num <- brainage_final %>% filter(brainage_final, is.numeric)
brainage_num <- brainage_final %>% select(where(is.numeric))
brainage_num
brainage_num <- brainage_final %>%
select(where(is.numeric)) %>%
na.omit(brainage_final)
# filter(!is.na(qi_1)) %>%
brainage_num
brainage_num <- brainage_final %>%
select(where(is.numeric)) %>%
# na.omit(brainage_final)
filter(!is.na(qi_1)) %>%
brainage_num
brainage_num <- brainage_final %>%
select(where(is.numeric)) %>%
# na.omit(brainage_final)
filter(!is.na(qi_1)) %>%
brainage_num <- brainage_final %>%
select(where(is.numeric)) %>%
# na.omit(brainage_final)
filter(!is.na(qi_1)) # %>%
brainage_num <- brainage_final %>%
select(where(is.numeric))
brainage_num <- brainage_final %>%
select(where(is.numeric)) %>% filter(!is.na(qi_1))
brainage_num <- brainage_final %>%
select(where(is.numeric)) %>%
na.omit(brainage_final) # omit all rows with NA values in any column
# filter(!is.na(qi_1)) # another way to remove row(s) with NA values by removing NA values from a specific column (in this case qi_1 is the only column with NAs)
brainage_num
corr <- round(cor(brainage_num), 1)
head(corr[, 1:6])
p_mat <- cor_pmat(brainage_num)
head(p_mat[, 1:4])
ggcorrplot(corr)
ggcorrplot(corr, hc.order = TRUE, outline.col = "white")
ggcorrplot(corr)
ggcorrplot(corr, hc.order = TRUE, type = "lower", lab = TRUE)
knitr::opts_chunk$set(echo = TRUE)
install.packages("stats")
install.packages("stats")
library(stats)
mean(corr)
brainage_5 <- brainage_num %>%
select(-qi_1)
brainage_5
corr2 <- round(cor(brainage_5), 1)
# view first 6 rows of the correlation matrix
head(corr2[, 1:6])
head(corr2[, 1:5])
head(p_mat[, 1:5])
head(p_mat[, 1:6])
head(p_mat[, 1:6])
p_mat2 <- cor_pmat(brainage_5)
head(p_mat2[, 1:5])
ggcorrplot(corr2)
ggcorrplot(corr2, hc.order = TRUE, type = "lower", lab = TRUE)
mean(corr2)
pca <- princomp(brainage_num)
pca2 <- princomp(brainage_5)
pca$loadings
pca2$loadings
pc <- pca$scores
pc
pc <- pca$scores
cor(pc)
pc2 <- pca2$scores
cor(pc2)
pca$loadings[,1:2]
format(pca2$loadings[,1:2], scientific = FALSE)
brainage <- brainage_final %>%
select(where(is.numeric)) %>% # subset by numeric columns
na.omit(brainage_final) %>%
select(-qi_1) %>% # remove the qi_1 column
select(-total_dx) # remove the total_dx column
brainage
corr3 <- round(cor(brainage), 1)
# view first 5 rows of the correlation matrix
head(corr3[, 1:4])
p_mat3 <- cor_pmat(brainage)
# display the full p-value matrix
head(p_mat3[, 1:5])
p_mat3 <- cor_pmat(brainage)
# display the full p-value matrix
head(p_mat3[, 1:4])
ggcorrplot(corr3, hc.order = TRUE, type = "lower", lab = TRUE)
mean(corr3)
pca3 <- princomp(brainage)
pca3$loadings
format(pca3$loadings[,1:2], scientific = FALSE)
cor(pc3)
cor(pc3)
pc3 <- pca3$scores
cor(pc3)
format(pca3$loadings[,1:3], scientific = FALSE)
install.packages("devtools")
install_github("kassambara/factoextra")
library(devtools)
install_github("kassambara/factoextra")
library(factoextra)
library("factoextra")
library("factoextra")
library(factoextra)
var_explained = pca$sdev^2 / sum(pca$sdev^2)
var_explained
qplot(c(1:4), var_explained) +
geom_line() +
geom_bar() +
xlab("Principal Component") +
ylab("Variance Explained") +
ggtitle("Scree Plot") +
ylim(0,1)
qplot(c(1:4), var_explained) +
geom_line() +
# geom_bar() +
xlab("Principal Component") +
ylab("Variance Explained") +
ggtitle("Scree Plot") +
ylim(0,1)
qplot(c(1:6), var_explained) +
geom_line() +
geom_bar() +
xlab("Principal Component") +
ylab("Variance Explained") +
ggtitle("Scree Plot") +
ylim(0,1)
qplot(c(1:6), var_explained) +
geom_line() +
# geom_bar() +
xlab("Principal Component") +
ylab("Variance Explained") +
ggtitle("Scree Plot") +
ylim(0,1)
var_explained
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
library(ggplot2)
enigma_new <- read_csv("/external/rprshnas01/tigrlab/scratch/csun/brainage_proj/data/processed/enigma_new.csv")
# Note the version of total disorder groupings used in enigma_new (0-1, 2-3, 4+)
brainage_df <- merge(enigma_new,
centiles_final[c('participant', 'centile')], by ='participant', all.x = TRUE)
centiles_final <- read_csv("/KIMEL/tigrlab/scratch/csun/BrainChart_data/data/processed/centiles_final.csv")
# Note the version of total disorder groupings used in centiles_final (0-1, 2-3, 4+)
brainage_df <- merge(enigma_new,
centiles_final[c('participant', 'centile')], by ='participant', all.x = TRUE)
brainage_merged <- merge(
brainage_df,enigma_ASD[c('participant', 'ASD_dx')], by ='participant', all.x = TRUE)
enigma_ASD <- read_csv("/external/rprshnas01/tigrlab/scratch/csun/brainage_proj/data/processed/enigma_ASD.csv")
brainage_merged <- merge(
brainage_df,enigma_ASD[c('participant', 'ASD_dx')], by ='participant', all.x = TRUE)
View(enigma_ASD)
brainage_female <- filter(brainage_final, sex == "Female")
brainage_final <- brainage_merged %>%
filter(!is.na(dx)) # only keep rows that are not missing 'dx'
brainage_final
brainage_female <- filter(brainage_final, sex == "Female")
brainage_male <- filter(brainage_final, sex == "Male")
mean(brainage_male$dx == "PSS")
mean(brainage_female$dx == "PSS")
asd_female <- filter(enigma_ASD, sex == "Female")
asd_male <- filter(enigma_ASD, sex == "Male")
mean(asd_male$ASD_dx == "Yes")
mean(asd_female$ASD_dx == "Yes")
t.test(sex ~ dx, alternative = "two.sided", data = brainage_final)
t.test(sex ~ total_dx, alternative = "two.sided", data = brainage_final)
brainage_final <- brainage_final %>% as.factor(brainage_final$sex)
brainage_final <- brainage_final %>% as.factor(sex)
brainage_final <- as.factor(brainage_final$sex)
t.test(sex ~ total_dx, alternative = "two.sided", data = brainage_final)
View(brainage_female)
brainage_final <- brainage_merged %>%
filter(!is.na(dx)) # only keep rows that are not missing 'dx'
brainage_final
brainage_final$sex <- as.factor(brainage_final$sex)
t.test(sex ~ total_dx, alternative = "two.sided", data = brainage_final)
t.test(total_dx ~ sex, alternative = "two.sided", data = brainage_final)
enigma_ASD$ASD_dx <- as.factor(enigma_ASD$ASD_dx)
brainage_final$dx <- as.factor(brainage_final$dx)
t.test(sex ~ dx, alternative = "two.sided", data = brainage_final)
table_dx <- table(brainage_final$dx, brainage_final$sex)
t.test(total_dx ~ sex, alternative = "two.sided", data = brainage_final)
result_dx <- chisq.test(table_dx)
result_dx
table_asd <- table(enigma_ASD$ASD_dx, enigma_ASD$sex)
result_asd <- chisq.test(table_asd)
result_asd
knitr::opts_chunk$set(echo = TRUE)
t.test(age_prediction ~ ASD_dx, alternative = "two.sided", data = enigma_ASD)
knitr::opts_chunk$set(echo = TRUE)
lm_centile_total_dx <- lm(centile ~ sex * dx * total_dx, data = brainage_final)
aov(lm_centile_total_dx)
summary(aov(lm_centile_total_dx))
lm_total_dx <- lm(BAG ~ sex * dx * total_dx, data = brainage_final)
aov(lm_total_dx)
summary(aov(lm_total_dx))
lm_total_dx <- lm(BAG ~ sex * dx * total_dx_group, data = brainage_final)
aov(lm_total_dx)
summary(aov(lm_total_dx))
lm_centile_total_dx_grp <- lm(centile ~ sex * dx * total_dx_group, data = brainage_final)
aov(lm_centile_total_dx_grp)
summary(aov(lm_centile_total_dx_grp))
lm_total_dx <- lm(BAG ~ sex * dx * total_dx, data = brainage_final)
aov(lm_total_dx)
summary(aov(lm_total_dx))
lm_total_dx_grp <- lm(BAG ~ sex * dx * total_dx_group, data = brainage_final)
aov(lm_total_dx_grp)
summary(aov(lm_total_dx_grp))
lm_total_dx_grp <- lm(BAG ~ dx * sex * total_dx_group, data = brainage_final)
aov(lm_total_dx_grp)
summary(aov(lm_total_dx_grp))
cor.test(brainage_final$centile, brainage_final$BAG, method = "pearson")$p.value
cor.test(brainage_final$centile, brainage_final$BAG, method = "pearson")
mean(brainage_final$Age)
mean(brainage_final$age_prediction)
result_dx
knitr::opts_chunk$set(echo = TRUE)
table_age_band <- table(brainage_final$dx, brainage_final$age_band)
table_age_band <- chisq.test(table_age_band)
table_age_band <- table(brainage_final$dx, brainage_final$age_band)
result_age_band
table_age_band <- table(brainage_final$dx, brainage_final$age_band)
result_age_band <- chisq.test(table_age_band)
result_age_band
table_ageb_sex <- table(brainage_final$sex, brainage_final$age_band)
result_ageb_sex <- chisq.test(table_ageb_sex)
result_ageb_sex
table_age_band <- table(brainage_final$dx, brainage_final$age_band)
result_age_band <- chisq.test(table_age_band)
result_age_band
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
knitr::opts_chunk$set(echo = TRUE)
qc_fmri <- read_csv("/KIMEL/tigrlab/scratch/csun/PNC_data/qc_fmri.csv")
bids_list <- read_csv("/KIMEL/tigrlab/scratch/csun/PNC_data/complete_bids_list.csv")
missing_qc_fmri <- anti_join(bids_list, qc_fmri, by='participant')
missing_qc_fmri
View(qc_fmri)
write_csv(missing_qc_fmri, file="/KIMEL/tigrlab/scratch/csun/PNC_data/missing_qc_fmri.csv", row.names=FALSE)
write.csv(missing_qc_fmri, file="/KIMEL/tigrlab/scratch/csun/PNC_data/missing_qc_fmri.csv", row.names=FALSE)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
library(ggplot2)
brainage_final <- read_csv("/KIMEL/tigrlab/scratch/csun/brainage_proj/data/processed/brainage_final.csv")
knitr::opts_chunk$set(echo = TRUE)
lint_r_source_document
print("hello")
install.packages("rmarkdown")
install.packages()
install.packages(tidyverse)
install.packages("tidyverse")
